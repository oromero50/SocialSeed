version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: socialseed-postgres
    environment:
      POSTGRES_DB: socialseed_v2
      POSTGRES_USER: socialseed
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-socialseed_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    networks:
      - socialseed-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: socialseed-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - socialseed-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    container_name: socialseed-backend
    environment:
      - DATABASE_URL=postgresql://socialseed:${POSTGRES_PASSWORD:-socialseed_password}@postgres:5432/socialseed_v2
      - REDIS_URL=redis://redis:6379/0
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your_super_secret_jwt_key_change_in_production}
      - ENVIRONMENT=production
      - DEBUG_MODE=false
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - socialseed-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: socialseed-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_ENVIRONMENT=production
    depends_on:
      - backend
    networks:
      - socialseed-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: socialseed-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - socialseed-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  socialseed-network:
    driver: bridge

